{"version":3,"sources":["layouts/NavBar.js","components/Button.js","components/ButtonPanel.js","components/ButtonGroups.js","helpers/buttonGroups.js","helpers/parseNum.js","components/Display.js","logic/operate.js","logic/calculate.js","components/App.js","layouts/Quote.js","layouts/Home.js","layouts/NotFound.js","Routes.js","index.js"],"names":["NavBar","className","href","Button","value","onclick","wide","color","type","style","width","backgroundColor","onClick","defaultProps","ButtonPanel","props","itemList","handleClick","lastButtons","map","item","Fragment","includes","undefined","ButtonGroups","groups","btnPanel","idx","Object","keys","buttons","itemList0","itemList1","itemList2","itemList3","itemList4","buttonGroups","parseNum","number","num","parsed","parseInt","parseFloat","Display","display","result","error","data-testid","operate","numberOne","numberTwo","operation","firstNum","Big","secondNum","plus","minus","times","div","calculate","calculatorObj","buttonName","total","next","App","useState","setTotal","setNext","setOperation","setDisplay","err","setErr","done","setDone","setButtonName","reset","updateDisplay","append","prevTotal","prevDisplay","numValue","Number","isNaN","parsedTotal","calcValue","parsedNext","displayValue","parsedValue","Quote","Home","NotFound","Routes","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.800d425a.chunk.js","sourcesContent":["import React from 'react';\n\nconst NavBar = () => (\n  <div className=\"navbar\">\n    <h2>Math Magicians</h2>\n    <div className=\"ul\">\n      <li><a href=\"/\">Home</a></li>\n      <li><a href=\"/calculator\">Calc</a></li>\n      <li><a href=\"/quote\">Quote</a></li>\n    </div>\n  </div>\n);\n\nexport default NavBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../Button.css';\n\nconst Button = ({\n  value, onclick, wide, color,\n}) => (\n  <button\n    type=\"button\"\n    style={{\n      width: wide ? '50%' : '25%',\n      backgroundColor: color,\n    }}\n    onClick={() => onclick(value)}\n  >\n    {value}\n  </button>\n);\n\nButton.propTypes = { value: PropTypes.string.isRequired };\nButton.propTypes = { onclick: PropTypes.func.isRequired };\nButton.propTypes = { wide: PropTypes.func.isRequired };\nButton.propTypes = { color: PropTypes.string };\n\nButton.defaultProps = {\n  color: '#ff7b00',\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button';\nimport '../ButtonPanel.css';\n\nconst ButtonPanel = props => {\n  const { itemList, handleClick } = props;\n  const lastButtons = ['=', '+', 'x', 'รท', '-'];\n  return (\n    <div className=\"buttonGroup\">\n      {itemList.map(item => (\n        <React.Fragment key={item}>\n          <Button value={item} onclick={handleClick} wide={item === '0'} color={lastButtons.includes(item) ? undefined : '#f6f6f6'} />\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n\nButtonPanel.propTypes = {\n  itemList: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\nButtonPanel.propTypes = { handleClick: PropTypes.func.isRequired };\n\nexport default ButtonPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonPanel from './ButtonPanel';\n\nconst ButtonGroups = props => {\n  const { groups, onclick } = props;\n\n  return (\n    groups.map((btnPanel, idx) => (\n      <React.Fragment key={Object.keys(btnPanel)[0]}>\n        <ButtonPanel itemList={btnPanel[`itemList${idx}`]} handleClick={onclick} />\n      </React.Fragment>\n    ))\n  );\n};\nButtonGroups.propTypes = {\n  groups: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\nButtonGroups.propTypes = { onclick: PropTypes.func.isRequired };\nexport default ButtonGroups;\n","const buttons = [\n  { itemList0: ['AC', '+/-', '%', 'รท'] },\n  { itemList1: ['7', '8', '9', 'x'] },\n  { itemList2: ['4', '5', '6', '-'] },\n  { itemList3: ['1', '2', '3', '+'] },\n  { itemList4: ['0', '.', '='] },\n];\nconst buttonGroups = () => buttons;\nexport default buttonGroups;\n","const parseNum = number => {\n  let num = number;\n  const parsed = parseInt(num, 10);\n  if (num.includes('.')) {\n    num = parseFloat(num);\n  } else {\n    num = parsed;\n  }\n  return num;\n};\nexport default parseNum;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../Display.css';\n\nconst Display = props => {\n  const { result, error } = props;\n  let display = result;\n  if (error) {\n    display = '\\u26A0';\n  }\n  return <div data-testid=\"display\" className=\"display\">{display}</div>;\n};\nDisplay.defaultProps = {\n  result: '0',\n  error: false,\n};\n\nDisplay.propTypes = {\n  result: PropTypes.string,\n  error: PropTypes.bool,\n};\n\nexport default Display;\n","import Big from 'big.js';\n\nconst operate = (numberOne, numberTwo, operation) => {\n  const firstNum = new Big(numberOne);\n  const secondNum = new Big(numberTwo);\n  if (operation === '+') {\n    return firstNum.plus(secondNum);\n  }\n  if (operation === '-') {\n    return secondNum.minus(firstNum);\n  }\n  if (operation === 'x') {\n    return firstNum.times(secondNum);\n  }\n  return secondNum.div(firstNum);\n};\n\nexport default operate;\n","import operate from './operate';\n\nconst calculate = (calculatorObj, buttonName = '') => {\n  const { total, next, operation } = calculatorObj;\n  if (buttonName === '+/-') {\n    if (total) {\n      return total * -1;\n    }\n    return next * -1;\n  }\n  if (buttonName === '%') {\n    if (total) {\n      return operate(100, total);\n    }\n    return operate(100, next);\n  }\n  return operate(total, next, operation);\n};\n\nexport default calculate;\n","import React, { useState } from 'react';\nimport '../App.css';\nimport ButtonGroups from './ButtonGroups';\nimport buttonGroups from '../helpers/buttonGroups';\nimport parseNum from '../helpers/parseNum';\nimport Display from './Display';\nimport calculate from '../logic/calculate';\n\nconst App = () => {\n  const [total, setTotal] = useState(null);\n  const [next, setNext] = useState(null);\n  const [operation, setOperation] = useState(null);\n  const [display, setDisplay] = useState('0');\n  const [err, setErr] = useState(false);\n  const [done, setDone] = useState(false);\n  const [buttonName, setButtonName] = useState(null);\n\n  const reset = () => {\n    setTotal(null);\n    setNext(null);\n    setOperation(null);\n    setErr(false);\n    setDisplay(null);\n    setDone(false);\n  };\n\n  const updateDisplay = (value, append = false) => {\n    if (append) {\n      setTotal(prevTotal => prevTotal + value);\n      setDisplay(prevDisplay => prevDisplay + value);\n    } else {\n      setTotal(value);\n      setDisplay(value);\n    }\n  };\n\n  const handleClick = value => {\n    if (err) {\n      reset();\n    }\n    const numValue = parseInt(value, 10);\n    if (value === '.') {\n      if (total && !done) {\n        if (!total.includes('.')) {\n          updateDisplay(`${value}`, true);\n        }\n      } else {\n        if (total && done && !operation) {\n          reset();\n        }\n        if (total && operation) {\n          updateDisplay(`${value}`, true);\n        } else {\n          updateDisplay('0.');\n        }\n      }\n    } else if (!Number.isNaN(numValue)) {\n      if (done && !operation) {\n        reset();\n        updateDisplay(`${value}`);\n      } else if (total) {\n        updateDisplay(`${value}`, true);\n      } else {\n        let displayValue = value;\n        if (buttonName) {\n          const parsedValue = parseNum(value);\n          displayValue = calculate(\n            {\n              total: parsedValue,\n              next,\n              operation,\n            },\n            buttonName,\n          );\n          setButtonName(null);\n        }\n        updateDisplay(`${displayValue}`);\n      }\n    } else if (value === 'AC') {\n      reset();\n      setDisplay('0');\n    } else if (value === '+/-' || value === '%') {\n      if (value === '+/-' && operation && !total) {\n        setButtonName(value);\n      } else if (total) {\n        const parsedTotal = parseNum(total);\n        const calcValue = calculate(\n          {\n            total: parsedTotal,\n            next: null,\n            operation,\n          },\n          value,\n        );\n        setDone(true);\n        updateDisplay(`${calcValue}`);\n      } else if (next) {\n        const parsedNext = parseNum(next);\n        const calcValue = calculate(\n          {\n            total: null,\n            next: parsedNext,\n            operation,\n          },\n          value,\n        );\n        setNext(`${calcValue}`);\n        setDisplay(`${calcValue}`);\n      }\n    } else if (next && total) {\n      const parsedTotal = parseNum(total);\n      const parsedNext = parseNum(next);\n      if (value === '=') {\n        const calcValue = calculate({\n          total: parsedTotal,\n          next: parsedNext,\n          operation,\n        });\n        setDone(true);\n        setOperation(null);\n        setNext(null);\n        updateDisplay(`${calcValue}`);\n      } else if (value !== '+/-' && value !== '%') {\n        const calcValue = calculate({\n          total,\n          next,\n          operation: value,\n        });\n        setNext(`${calcValue}`);\n        setTotal(null);\n        setDisplay(`${calcValue}`);\n      }\n    } else if (total && value !== '=') {\n      setNext(total);\n      setTotal(null);\n      setOperation(value);\n    } else if (value === '=') {\n      setOperation(null);\n    } else {\n      setErr(true);\n    }\n  };\n\n  return (\n    <>\n      <Display result={display} error={err} />\n      <ButtonGroups groups={buttonGroups()} onclick={handleClick} />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\n\nconst Quote = () => (\n  <div className=\"quote\">\n    <h3>Quote of the day</h3>\n    <p>\n      Mathematics is not about numbers, equations, computations, or algorithms:\n      it is about understanding. โWilliam Paul Thurston\n    </p>\n  </div>\n);\n\nexport default Quote;\n","import React from 'react';\n\nconst Home = () => (\n  <div className=\"home\">\n    <h3>Welcome to our page!</h3>\n    <p>\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Quas,\n      veniam unde doloremque eius aperiam aliquid, repellat consectetur\n      alias voluptatem necessitatibus architecto error possimus et,\n      ducimus autem corporis repudiandae voluptatibus! Quam?\n    </p>\n    <p>\n      Lorem ipsum, dolor sit amet consectetur adipisicing elit.\n      Ipsum fugit dolores ex dicta dolore mollitia vitae sed et,\n      nam praesentium sapiente autem vel labore dignissimos, qui harum,\n      repellendus sit perspiciatis.\n    </p>\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>404 Page not found</div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport App from './components/App';\nimport Quote from './layouts/Quote';\nimport Home from './layouts/Home';\nimport NotFound from './layouts/NotFound';\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/calculator\" component={App} />\n      <Route exact path=\"/quote\" component={Quote} />\n      <Route exact path=\"/\" component={Home} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport NavBar from './layouts/NavBar';\nimport Routes from './Routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <NavBar />\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}